exit
res
exit
source_opts.model_class
source_opts
source_table
results
exit
through_table
source_table
source_pk
exit
results
exit
value
source_fk
through_table
source_table
value
exit
value
through_table.primary_key
through_table
exit
through_table
through_opts.primary_key
through_opts
throughopts
self.send(through_opts.foreign_key)
self.send(through_opts[:foreign_key])
self.through_opts[:foreign_key]
self
through_opts.primary_key
source_opts
through_opts
source_opts
through_opts.table_name
through_opts
self.table_name
self
source_opts.table_name
source_opts.class_name
source_opts
through_opts
exit
through_opts.methods - "".methods
through_opts.methods
through_opts.class.methods - "".methods
through_opts.class.methods
through_opts.class
through_opts
through_opts.table_name
exit
through_opts.model_classexit
through_opts.model_class
through_options.model_class
source_opts.class_name.constantize.columns
source_opts.class_name.constantize
source_opts.class_name
source_opts
self
through_opts
exit
through_opts.class_name.constantize.assoc_options[source_name]
through_opts.class_name.constantize.assoc_options
through_opts.class_name.constantize
through_opts.class_name
through_opts
exit
through_opts
through
self.class.assoc_options[through_name]
self.class.assoc_options
self.class
self
through_name
name
exit
options.class_name
options
exit
options.class_name.constantize
options.class_name
options
exit
self.send(through_name).send(source_name)
self.send(through_name)
through_name
self.human.house
self.human
self
exit
self
source_name
through_name
name
exit
keys
options
self.to_s
name
exit
self.attributes[:id]
keys.foreign_key
name
exit
params.values
params
search
quit
self.class.where(keys.foreign_key.to_s => self.attributes[:id])
self.class.where(keys.foreign_key => self.attributes[:id])
exit
[:id]
self.attributes
keys
options
self.class.where(options[:foreign_key] => self.attributes[:id])
self.class
self
name
keys
exit
name.to_s.camelcase.singularize
name
options
"#{self_class_name.to_s.downcase}_id".to_sym
self_class_name.to_s.downcase
self_class_name.to_s
options
self_class_name
exit
options
self_class_name
name
options
self_class_name
exit
keys
self.class
self
exit
self.class.to_s
self.class
self.class_name
self
exit
self
name
continue
class_name
results
continue
results
class_name
exit
results
continue
s
self
exit
self
options[:foreign_key]
options
class_name
results
exit
self_class_name.singularize.downcase
self_class_name.singularize
.singularize
self_class_name
exit
self_class_name
name
self
@foreign_key
exit
keys
options
name
self
table_name
model_class
keys
exit
self.class
self
options
name
exit
keys
self.attributes[keys.foreign_key]
class_name.where(:id => self.attributes[keys.foreign_key]).first
class_name
exit
keys.foreign_key
keys[:foreign_key]
keys
exit
name
options
exit
options
self.attributes[options[:foreign_key]]
self
class_name
exit
self.class_name
model_class
self.model_class
self.table_name
self
exit
self.model_class
self.class_name
options
self
name
exit
result
exit
self.attributes[:owner_id]
self.attributes[:ower_id]
self.attributes
self
options
name
debugger
exit
options
exit
self
exit
self
exit
self
options
name.to_s.camelcase.constantize
name.camelcase.constantize
name.to_s.constantize
name.constantize
name
options[:foreign_key]
options
exit
name
Cat.table_name
self
options
name
exit
options
exit
self
exit
options
